{"version":3,"sources":["C:/Users/BFG9000/Desktop/AgriChain/AvocadoApp/node_modules/angular-image-slider/fesm2015/angular-image-slider.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAmDE;;;;;;;;;;;;;;;yDAeuD,AA0BrC;;;;;;;EAGlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWe","file":"angular-image-slider.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { SecurityContext, Input, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { interval } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nlet SliderComponent = class SliderComponent {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.autoRotate = false;\n        this.autoRotateAfter = 5000;\n        this.autoRotateRight = true;\n        this.safeUrls = [];\n        this.state = 'void';\n        this.disableSliderButtons = false;\n    }\n    ngOnInit() {\n        this.images.forEach(element => {\n            const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, element);\n            this.safeUrls.push(safeUrl);\n        });\n        this.imageUrls = this.safeUrls;\n        if (this.autoRotate) {\n            const source = interval(this.autoRotateAfter);\n            this.subscription = source.subscribe(() => (this.autoRotateRight) ? this.moveLeft() : this.moveRight());\n        }\n    }\n    imageRotate(arr, reverse) {\n        if (reverse) {\n            arr.unshift(arr.pop());\n        }\n        else {\n            arr.push(arr.shift());\n        }\n        return arr;\n    }\n    moveLeft() {\n        if (this.disableSliderButtons) {\n            return;\n        }\n        this.state = 'right';\n        this.imageRotate(this.imageUrls, true);\n    }\n    moveRight() {\n        if (this.disableSliderButtons) {\n            return;\n        }\n        this.state = 'left';\n        this.imageRotate(this.imageUrls, false);\n    }\n    onFinish($event) {\n        this.state = 'void';\n        this.disableSliderButtons = false;\n    }\n    onStart($event) {\n        this.disableSliderButtons = true;\n    }\n};\nSliderComponent.ctorParameters = () => [\n    { type: DomSanitizer }\n];\n__decorate([\n    Input()\n], SliderComponent.prototype, \"images\", void 0);\n__decorate([\n    Input()\n], SliderComponent.prototype, \"autoRotate\", void 0);\n__decorate([\n    Input()\n], SliderComponent.prototype, \"autoRotateAfter\", void 0);\n__decorate([\n    Input()\n], SliderComponent.prototype, \"autoRotateRight\", void 0);\nSliderComponent = __decorate([\n    Component({\n        selector: 'angular-image-slider',\n        template: \"<div id=\\\"container\\\">\\n  <div class=\\\"overlay-left\\\"></div>\\n  <div class=\\\"overlay-right\\\"></div>\\n  <div id=\\\"grid\\\" class=\\\"image-cropper\\\">\\n    <img *ngFor=\\\"let url of imageUrls; let i = index\\\" \\n      [@move]=\\\"state\\\" \\n      (@move.done)=\\\"onFinish($event)\\\" \\n      (@move.start)=\\\"onStart($event)\\\" \\n      [attr.class]=\\\"i\\\" \\n      [src]=\\\"url\\\"\\n      alt=\\\"\\\" />\\n  </div>\\n  <div>\\n    <a id=\\\"slider-buttons-left\\\" (click)=\\\"moveLeft()\\\">&#10094;</a>\\n    <a id=\\\"slider-buttons-right\\\" (click)=\\\"moveRight()\\\">&#10095;</a>\\n  </div>\\n</div>\",\n        animations: [\n            trigger('move', [\n                state('in', style({ transform: 'translateX(0)' })),\n                transition('void => left', [\n                    style({ transform: 'translateX(100%)' }),\n                    animate(200)\n                ]),\n                transition('left => void', [\n                    animate(200, style({ transform: 'translateX(0)' }))\n                ]),\n                transition('void => right', [\n                    style({ transform: 'translateX(-100%)' }),\n                    animate(200)\n                ]),\n                transition('right => void', [\n                    animate(200, style({ transform: 'translateX(0)' }))\n                ])\n            ])\n        ],\n        styles: [\"#container{position:relative;overflow-x:hidden}#grid{display:-ms-grid;display:grid;height:150;-ms-grid-columns:(1fr)[3];grid-template-columns:repeat(3,1fr);-ms-grid-rows:300px;grid-template-rows:300px;grid-column-gap:20px}.overlay-left{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;left:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}.overlay-right{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;right:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}#grid>div{background-color:gray}#slider-buttons-left{position:absolute;z-index:1000;top:130px;float:left;cursor:pointer;font-size:250%;color:#789;left:60px}#slider-buttons-right{position:absolute;top:130px;z-index:1000;float:right;cursor:pointer;font-size:250%;color:#789;right:60px}.image-cropper{height:300px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}.image-cropper img{max-width:100%;max-height:100%;display:block;margin:0 auto}\"]\n    })\n], SliderComponent);\n\nlet SliderModule = class SliderModule {\n};\nSliderModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule\n        ],\n        declarations: [\n            SliderComponent\n        ],\n        exports: [SliderComponent]\n    })\n], SliderModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SliderModule, SliderComponent as Éµa };\n"]}