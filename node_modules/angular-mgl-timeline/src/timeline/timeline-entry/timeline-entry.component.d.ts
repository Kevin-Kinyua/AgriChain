import { MglTimelineEntrySideComponent } from './../timeline-entry-side/timeline-entry-side.component';
import { MglTimelineEntryDotComponent } from './../timeline-entry-dot/timeline-entry-dot.component';
import { AfterViewInit, EventEmitter, OnDestroy, ElementRef } from '@angular/core';
import { MglTimelineEntryContentComponent } from '../timeline-entry-content/timeline-entry-content.component';
import { MglTimelineEntryHeaderComponent } from '../timeline-entry-header/timeline-entry-header.component';
import * as ɵngcc0 from '@angular/core';
export declare class MglTimelineEntryComponent implements AfterViewInit, OnDestroy {
    private elementRef;
    private subscriptions;
    focusOnOpen: boolean;
    set expanded(expanded: boolean);
    get expanded(): boolean;
    private _mobile;
    set mobile(value: any);
    changed: EventEmitter<boolean>;
    animationDone: EventEmitter<string>;
    content: MglTimelineEntryContentComponent;
    header: MglTimelineEntryHeaderComponent;
    dot: MglTimelineEntryDotComponent;
    side: MglTimelineEntrySideComponent;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    set alternate(value: boolean);
    ngOnDestroy(): void;
    collapse(): void;
    expand(): void;
    toggle(event: MouseEvent): void;
    private containsInPath;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MglTimelineEntryComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MglTimelineEntryComponent, "mgl-timeline-entry", never, {}, {
    "changed": "expand";
    "animationDone": "animationDone";
}, ["content", "header", "dot", "side"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtZW50cnkuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpbWVsaW5lLWVudHJ5LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWdsVGltZWxpbmVFbnRyeVNpZGVDb21wb25lbnQgfSBmcm9tICcuLy4uL3RpbWVsaW5lLWVudHJ5LXNpZGUvdGltZWxpbmUtZW50cnktc2lkZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWdsVGltZWxpbmVFbnRyeURvdENvbXBvbmVudCB9IGZyb20gJy4vLi4vdGltZWxpbmUtZW50cnktZG90L3RpbWVsaW5lLWVudHJ5LWRvdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1nbFRpbWVsaW5lRW50cnlDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi4vdGltZWxpbmUtZW50cnktY29udGVudC90aW1lbGluZS1lbnRyeS1jb250ZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZ2xUaW1lbGluZUVudHJ5SGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vdGltZWxpbmUtZW50cnktaGVhZGVyL3RpbWVsaW5lLWVudHJ5LWhlYWRlci5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWdsVGltZWxpbmVFbnRyeUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBmb2N1c09uT3BlbjogYm9vbGVhbjtcbiAgICBzZXQgZXhwYW5kZWQoZXhwYW5kZWQ6IGJvb2xlYW4pO1xuICAgIGdldCBleHBhbmRlZCgpOiBib29sZWFuO1xuICAgIHByaXZhdGUgX21vYmlsZTtcbiAgICBzZXQgbW9iaWxlKHZhbHVlOiBhbnkpO1xuICAgIGNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBhbmltYXRpb25Eb25lOiBFdmVudEVtaXR0ZXI8c3RyaW5nPjtcbiAgICBjb250ZW50OiBNZ2xUaW1lbGluZUVudHJ5Q29udGVudENvbXBvbmVudDtcbiAgICBoZWFkZXI6IE1nbFRpbWVsaW5lRW50cnlIZWFkZXJDb21wb25lbnQ7XG4gICAgZG90OiBNZ2xUaW1lbGluZUVudHJ5RG90Q29tcG9uZW50O1xuICAgIHNpZGU6IE1nbFRpbWVsaW5lRW50cnlTaWRlQ29tcG9uZW50O1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHNldCBhbHRlcm5hdGUodmFsdWU6IGJvb2xlYW4pO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY29sbGFwc2UoKTogdm9pZDtcbiAgICBleHBhbmQoKTogdm9pZDtcbiAgICB0b2dnbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHByaXZhdGUgY29udGFpbnNJblBhdGg7XG59XG4iXX0=